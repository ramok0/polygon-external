#pragma once
#include <exploit.h>
#include <cache.h>
#include <config.h>
#include <offsets.h>

class RapidFire : public Exploit<AItem_Gun_General*, float> {
public:
	RapidFire() : Exploit("Rapid Fire") {

	}
protected:
	void* get_object_ptr() override {
		return cache::LocalCurrentWeapon;
	}

	void read_data(float* buffer) override {
		*buffer = cache::LocalCurrentWeapon->get_time_between_shots();
	}

	float get_write_data() override {
		return config::config->data()->time_between_shots;
	}

	void write(AItem_Gun_General* object, float data) override {
		object->set_fire_rate(data);
	}

	bool* get_enabled_ptr() override {
		return &config::config->data()->rapid_fire;
	}
};