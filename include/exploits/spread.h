#pragma once
#include <exploit.h>
#include <config.h>
#include <ue4.h>
#include <wrappers.h>
#include <cache.h>

class NoSpread : public Exploit<AItem_Gun_General*, SpreadData> {
public:
	NoSpread() : Exploit<AItem_Gun_General*, SpreadData>("No Spread") { };

	void* get_object_ptr() override {
		return cache::LocalCurrentWeapon;
	}

	bool* get_enabled_ptr() override {
		return &config::config->data()->no_spread;
	}

	void write(AItem_Gun_General* object, SpreadData data) {
		object->set_spread(data.CurrentSpread, data.SpreadShot);
	}

	SpreadData get_write_data() {
		return SpreadData(0, 0);
	}

	void read_data(SpreadData* buffer) {
		*buffer = cache::LocalCurrentWeapon->get_spread();
	}
};