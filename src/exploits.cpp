#include <exploits.h>
#include <cache.h>
#include <config.h>
#include <offsets.h>
#include <wrappers.h>
#include <exploits/stamina.h>
#include <exploits/recoil.h>
#include <exploits/spread.h>
#include <exploits/instantaim.h>
#include <exploits/speedhack.h>
#include <exploits/instantreload.h>

void exploits::init(void)
{
	m_exploits.push_back(std::make_unique<RapidFire>());
	m_exploits.push_back(std::make_unique<InfiniteStamina>());
	m_exploits.push_back(std::make_unique<NoRecoil>());
	m_exploits.push_back(std::make_unique<NoSpread>());
	m_exploits.push_back(std::make_unique<InstantAim>());
	m_exploits.push_back(std::make_unique<SpeedHack>());
	m_exploits.push_back(std::make_unique<InstantReload>());
}


void exploits::panic()
{
	AItem_Gun_General* primary_weapon = cache::LocalInventory->get_primary_weapon();
	AItem_Gun_General* secondary_weapon = cache::LocalInventory->get_secondary_weapon();

	for (const auto& exploit : m_exploits) {
		exploit->reset_original_data(primary_weapon);
		exploit->reset_original_data(secondary_weapon);
	}
}